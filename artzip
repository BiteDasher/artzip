#!/bin/bash
unset CREATE EXTRACT
if [ -z "$BS" ]; then BS=1048576; fi
random() {
	tr -dc 'A-Za-z0-9!"#$%&'\''()*+,-./:;<=>?@[\]^_`{|}~' < /dev/urandom | head -c 20
	echo ''
}
duthis() {
	size="$(du -hB1 "$1")"
	size="${size/[[:blank:]]**/}"
	size="$((size/1024))"
	echo "File size in kilobytes: $size"
}
cryptkey() {
	if [ -n "$(echo "$SED" | grep -o "[^A-Za-z0-9+:@_~]" | sed '/^ $/d')" ]; then
		echo "Illegal characters appears in sed dictionary"
		exit 7
	fi
	KEY="$(
while read -rn 1 char; do
	echo "$char"
done <<<"$KEY")"
	FILE="$(echo "$SED" | sed -e 's/^/s\/\^/' -e 's/ /$\//' -e 's/$/\//')"
	KEY="$(echo "$KEY" | sed -f <(echo "$FILE") -e ':a;N;$!ba;s/\n//g')"
}
gettrigger() {
	TRIGGER="$(echo "$TRIGGERS" | sed "${1}q;d" | openssl enc -d -k "$OLDKEY" -aes256 -in - -out - -salt -iter 10000 -base64 -A)" || exit 8
}
cryptall() {
	local _start=1
	local _lines="$(for i in ./*; do echo "$i"; done | wc -l)"
	echo "Encrypting data..."
	for file in ./*; do
		echo -ne "\rProgress: [$_start/$_lines]"
		TRIGGER="$(random)"
		openssl enc -e -k "$KEY $TRIGGER" -aes256 -in "$file" -out "$file".c -salt -iter 10000 -md sha512 || exit 8
		echo "$TRIGGER" | openssl enc -e -k "$OLDKEY" -aes256 -in - -out - -salt -iter 10000 -base64 -A >> .base64 || exit 8
		echo '' >> .base64
		rm -f "$file"
		((_start++))
	done
	echo ''
}
decryptall() {
	local _start=1
	local _lines="$(for i in ./*; do echo "$i"; done | wc -l)"
	echo "Decrypting data..."
	for file in ./*; do
		echo -ne "\rProgress: [$_start/$_lines]"
		gettrigger $_start
		openssl enc -d -k "$KEY $TRIGGER" -aes256 -in "$file" -out "$file".e -salt -iter 10000 -md sha512 || exit 8
		rm -f "$file"
		((_start++))
	done
	echo ''
}

transform() {
	echo "Compressing archive..."
	tar -c "$_S".*.artzip.c -f "$_S".tar || exit 9
	rm "$_S".*.artzip.c
	echo "Encrypting archive..."
	openssl enc -e -k "$(openssl passwd -6 -in <(echo "$_S") -salt "$(echo "$_S" | wc -m)")" -in "$_S".tar -out "$_S".az -salt -iter 10000 -md sha512 || exit 8
}
transform2() {
	echo "Decrypting archive..."
	openssl enc -d -k "$(openssl passwd -6 -in <(echo "${FILENAME}") -salt "$(echo "${FILENAME}" | wc -m)")" -in "$EXTRACT" -out "$_S".tar -salt -iter 10000 -md sha512
	echo "Unpacking..."
	tar -x -v -f "$_S".tar || exit 9
	rm "$_S".tar
}
transform3() {
	local _start=1
	local _lines="$(for i in ./*; do echo "$i"; done | wc -l)"
	echo "Combining data..."
	for file in ./"$FILENAME".*.artzip.c.e; do
		echo -ne "\rProgress: [$_start/$_lines]"
		cat "$file" >> "$_S"
		rm "$file"
		((_start++))
	done
	echo ''
}
		

case "$1" in
	-c|--create)
	if [[ ! -f "$2" || -z "$2" ]]; then
		echo "Raw file not provided"
		exit 1
	fi
	if [ -z "$3" ]; then
		echo "Encryption key not provided"
		exit 1
	fi
	_P="$(dirname "$2")"
	_S="$(basename "$2")"
	CREATE="$_P/$_S"
	if [[ "$3" == +(-f|--file) && -n "$4" ]]; then
		if [ -f "$4" ]; then
			KEY="$(< "$4")"
			if [ -f "$5" ]; then
				SED="$(< "$5")"
			else
				echo "sed dictionary not found"
				exit 5
			fi
		else
			echo "Encryption keyfile not provided"
			exit 3
		fi
	else
		KEY="$3"
		if [ -f "$4" ]; then
			SED="$(< "$4")"
		else
			echo "sed dictionary not found"
			exit 5
		fi
	fi
	;;
	-x|--extract)
	if [[ ! -f "$2" || -z "$2" ]]; then
		echo "Compressed file prefix not provided"
		exit 2
	fi
	if [ "$2" != *.az ]; then
		echo "$2 is not a ArtZip archive"
		exit 2
	fi
	if [ -z "$3" ]; then
		echo "Encryption key not provided"
		exit 1
	fi
	_P="$(dirname "$2")"
	_S="$(basename "$2")"
	EXTRACT="$_P/$_S"
	if [ -z "$EXTRACT" ]; then
		echo "ArtZip file not found"
		exit 2
	fi
	if [[ "$3" == +(-f|--file) && -n "$4" ]]; then
		if [ -f "$4" ]; then
			KEY="$(< "$4")"
		else
			echo "Encryption keyfile not provided"
			exit 3
		fi
		if [ -f "$5" ]; then
			SED="$(< "$5")"
		else
			echo "sed dictionary not found"
			exit 5
		fi
		if [ -f "$6" ]; then
			TRIGGERS="$(< "$6")"
		else
			echo "Chunk key file not found"
			exit 4
		fi
	else
		KEY="$3"
		if [ -f "$4" ]; then
			SED="$(< "$4")"
		else
			echo "sed dictionary not found"
			exit 5
		fi
		if [ -f "$5" ]; then
			TRIGGERS="$(< "$5")"
		else
			echo "Chunk file not found"
			exit 4
		fi
	fi
	;;
	-h|--help)
	bn="$(basename $0)"
	echo "$bn --create FILE KEY/KEYFILE SED_DICT"
	echo "$bn --extract FILE KEY/KEYFILE SED_DICT CHUNK_KEYFILE"
	echo "  bash ${bn}_gen_sed_random > SED_DICT"
	exit 0
	;;
	*)
	echo "Unknown argument"
	exit 6
	;;
esac
if [ -n "$CREATE" ]; then
	duthis "$CREATE"
	_PWD="$PWD"
	rm -rf ./.ARTZIP_PROCESS
	mkdir ./.ARTZIP_PROCESS || exit 9
	cd ./.ARTZIP_PROCESS
	[ "${CREATE::2}" == "./" ] && CREATE=".${CREATE}"
	split -b "$BS" "$CREATE" "$_S". --additional-suffix=.artzip
	OLDKEY="$KEY"
	cryptkey
	cryptall
	transform
	mv "$_S".az "$_PWD"/"$_S".az
	mv .base64 "$_PWD"/random_keys
	rm -rf ./.ARTZIP_PROCESS
	: ""
	exit 0
fi
if [ -n "$EXTRACT" ]; then
	duthis "$EXTRACT"
	_PWD="$PWD"
	rm -rf ./.ARTZIP_PROCESS
	mkdir ./.ARTZIP_PROCESS || exit 9
	cd ./.ARTZIP_PROCESS
	[ "${EXTRACT::2}" == "./" ] && EXTRACT=".${EXTRACT}"
	OLDKEY="$KEY"
	cryptkey
	FILENAME="${_S%%.az}"
	transform2
	decryptall
	transform3
	mv "$_S" "$_PWD"/"$FILENAME"
	: ""
	rm -rf ./.ARTZIP_PROCESS
	exit 0
fi
